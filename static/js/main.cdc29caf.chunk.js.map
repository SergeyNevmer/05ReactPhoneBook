{"version":3,"sources":["components/App/App.module.css","components/ContactFound/ContactFound.module.css","components/FindContacts/FindContacts.module.css","components/transitions/fade.module.css","components/ContactsList/ContactsList.module.css","components/transitions/pop.module.css","components/ContactsListItem/ContactsListItem.module.css","components/NameAndNumberForm/NameAndNumberForm.js","components/ContactFound/ContactFound.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/FindContacts/FindContacts.js","components/App/App.js","index.js","components/NameAndNumberForm/NameAndNumberForm.module.css"],"names":["module","exports","NameAndNumberForm","name","number","onChange","onSubmit","className","css","container","containerForInput","input","type","pattern","title","required","value","btn","ContactFound","text","ContactsListItem","deleteContact","id","containerForInfo","onClick","xmlns","btnClose","width","height","viewBox","d","ContactsList","arrСontacts","TransitionGroup","component","map","item","CSSTransition","timeout","unmountOnExit","classNames","popTransition","FindContacts","App","state","contacts","isOpen","filter","handleChange","e","setState","target","handleFilter","handleSubmit","preventDefault","find","contact","setTimeout","prevState","nanoid","reset","this","filteredContacts","toLowerCase","includes","filterContacts","in","fadeTransition","length","React","Component","root","document","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.cdc29caf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__8k_h3\",\"title\":\"App_title__1bDrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactFound_container__2l4fm\",\"text\":\"ContactFound_text__395zO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FindContacts_container__3QN9E\",\"containerForInfo\":\"FindContacts_containerForInfo__3S80k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1FCEe\",\"enterActive\":\"fade_enterActive__1-Cwt\",\"exit\":\"fade_exit__3cNnH\",\"exitActive\":\"fade_exitActive__EBqwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsList_container__1a-xF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1MlPi\",\"enterActive\":\"pop_enterActive__28jN6\",\"exit\":\"pop_exit__2swTV\",\"exitActive\":\"pop_exitActive__3IYzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsListItem_container__F0nYD\",\"containerForInfo\":\"ContactsListItem_containerForInfo__3i_mF\",\"name\":\"ContactsListItem_name__3llI0\",\"btn\":\"ContactsListItem_btn__3Z-ZY\",\"number\":\"ContactsListItem_number__1iPTc\",\"btnClose\":\"ContactsListItem_btnClose__1b7zd\"};","import React from \"react\";\r\nimport css from \"./NameAndNumberForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NameAndNumberForm = ({ name, number, onChange, onSubmit }) => (\r\n  <form className={css.container} onSubmit={onSubmit}>\r\n    <div className={css.containerForInput}>\r\n      <label className={css.input}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n      <label className={css.input}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n    <button type=\"submit\" className={css.btn}>\r\n      Add contact\r\n    </button>\r\n  </form>\r\n);\r\n\r\nNameAndNumberForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NameAndNumberForm;\r\n","import React from \"react\";\r\nimport css from \"./ContactFound.module.css\";\r\n\r\nconst ContactFound = () => (\r\n  <div className={css.container}>\r\n    <p className={css.text}>Contact already exists</p>\r\n  </div>\r\n);\r\n\r\nexport default ContactFound;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactsListItem.module.css\";\r\n\r\nconst ContactsListItem = ({ name, number, deleteContact, id }) => (\r\n  <li className={css.container}>\r\n    <div className={css.containerForInfo}>\r\n      <p className={css.name}>{name}</p>\r\n      <p className={css.number}>{number}</p>\r\n      <button className={css.btn} onClick={() => deleteContact(id)}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className={css.btnClose}\r\n          width=\"40\"\r\n          height=\"40\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm3.354 4.646L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 1 1 .708-.708z\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nContactsListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from \"react\";\r\nimport ContactsListItem from \"../ContactsListItem/ContactsListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactsList.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\n\r\nconst ContactsList = ({ arrСontacts, deleteContact }) => (\r\n  <TransitionGroup className={css.container} component=\"ul\">\r\n    {arrСontacts.map((item) => (\r\n      <CSSTransition\r\n        key={item.id}\r\n        timeout={200}\r\n        unmountOnExit\r\n        classNames={popTransition}\r\n      >\r\n        <ContactsListItem\r\n          name={item.name}\r\n          number={item.number}\r\n          deleteContact={deleteContact}\r\n          id={item.id}\r\n        />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  arrСontacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport css from \"./FindContacts.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FindContacts = ({ value, onChange }) => (\r\n  <div className={css.container}>\r\n    <label className={css.containerForInfo}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFindContacts.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FindContacts;\r\n","import React from \"react\";\r\nimport css from \"./App.module.css\";\r\nimport NameAndNumberForm from \"../NameAndNumberForm/NameAndNumberForm\";\r\nimport ContactFound from \"../ContactFound/ContactFound\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeTransition from \"../transitions/fade.module.css\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport FindContacts from \"../FindContacts/FindContacts\";\r\n\r\nfunction filterContacts(contacts, filter) {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n}\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    contacts: [],\r\n    isOpen: false,\r\n    filter: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number, contacts } = this.state;\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      this.setState({ isOpen: true });\r\n      setTimeout(() => {\r\n        this.setState({ isOpen: false });\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts, { id: nanoid(), name, number }],\r\n    }));\r\n\r\n    this.reset();\r\n  };\r\n\r\n  deleteContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isOpen, contacts, filter } = this.state;\r\n    const filteredContacts = filterContacts(contacts, filter);\r\n    return (\r\n      <div className={css.container}>\r\n        <h1 className={css.title}>Phonebook</h1>\r\n        <CSSTransition\r\n          in={isOpen}\r\n          timeout={1000}\r\n          unmountOnExit\r\n          classNames={fadeTransition}\r\n        >\r\n          <ContactFound />\r\n        </CSSTransition>\r\n        <NameAndNumberForm\r\n          name={name}\r\n          number={number}\r\n          onChange={this.handleChange}\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n        {contacts.length >= 2 && (\r\n          <FindContacts value={filter} onChange={this.handleFilter} />\r\n        )}\r\n        {contacts.length > 0 && (\r\n          <ContactsList\r\n            arrСontacts={filteredContacts}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactDom from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\n\r\nconst root = document.getElementById(\"root\");\r\nReactDom.render(<App />, root);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NameAndNumberForm_container__1MWfy\",\"containerForInput\":\"NameAndNumberForm_containerForInput__3eDFH\",\"input\":\"NameAndNumberForm_input___FxaV\",\"btn\":\"NameAndNumberForm_btn__KyLSI\"};"],"sourceRoot":""}